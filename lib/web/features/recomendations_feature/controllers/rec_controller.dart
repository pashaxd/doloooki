import 'package:get/get.dart';
import 'package:doloooki/mobile/features/recomendations_feature/data/models/popular_model.dart';
import 'package:doloooki/mobile/features/recomendations_feature/data/models/colors_model.dart';
import 'package:doloooki/mobile/features/recomendations_feature/data/services/recomendations_service.dart';
import 'package:doloooki/mobile/features/recomendations_feature/data/services/colors_service.dart';
import 'package:doloooki/mobile/features/patterns_feature/models/pattern_item.dart';
import 'package:doloooki/utils/palette.dart';
import 'package:doloooki/utils/text_styles.dart';
import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'dart:async';

enum RecViewMode {
  main,      // –û—Å–Ω–æ–≤–Ω–æ–π —ç–∫—Ä–∞–Ω —Å –ø—Ä–µ–≤—å—é
  patterns,  // –í—Å–µ –æ–±—Ä–∞–∑—ã 
  colors     // –í—Å–µ –ø–∞–ª–∏—Ç—Ä—ã
}

class RecController extends GetxController with GetSingleTickerProviderStateMixin {
  final RecomendationsService _recomendationsService = RecomendationsService();
  final ColorsService _colorsService = ColorsService();
  
  // –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –æ–±—Ä–∞–∑—ã (—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
  final RxList<PopularModel> popularModels = <PopularModel>[].obs;
  
  // –¶–≤–µ—Ç–æ–≤—ã–µ –ø–∞–ª–∏—Ç—Ä—ã
  final RxList<ColorsModel> colorsModels = <ColorsModel>[].obs;
  
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  final RxBool isLoadingPatterns = false.obs;
  final RxBool isLoadingColors = false.obs;
  final RxString error = ''.obs;
  
  // –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –ø–æ—Ç–æ–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  StreamSubscription? _popularModelsSubscription;
  StreamSubscription? _colorsModelsSubscription;
  
  // –†–µ–∂–∏–º –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  final Rx<RecViewMode> currentView = RecViewMode.main.obs;
  
  // –í—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  final Rx<PopularModel?> selectedPopularModel = Rx<PopularModel?>(null);
  final Rx<ColorsModel?> selectedColorsModel = Rx<ColorsModel?>(null);

  // –§–ª–∞–≥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  bool get initialized => !isLoadingPatterns.value && !isLoadingColors.value;

  @override
  void onInit() {
    super.onInit();
    loadPopularModels();
    loadColorsModels();
  }

  @override
  void onClose() {
    _popularModelsSubscription?.cancel();
    _colorsModelsSubscription?.cancel();
    super.onClose();
  }

  // –ù–∞–≤–∏–≥–∞—Ü–∏—è –º–µ–∂–¥—É —Ä–µ–∂–∏–º–∞–º–∏
  void navigateToPatterns() {
    currentView.value = RecViewMode.patterns;
    selectedPopularModel.value = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
  }

  void navigateToColors() {
    currentView.value = RecViewMode.colors;
    selectedColorsModel.value = null; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
  }

  void backToMain() {
    currentView.value = RecViewMode.main;
    selectedPopularModel.value = null;
    selectedColorsModel.value = null;
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –æ–±—Ä–∞–∑–æ–≤
  void loadPopularModels() {
    isLoadingPatterns.value = true;
    error.value = '';
    
    _popularModelsSubscription = _recomendationsService.getPopularModelsStream().listen(
      (models) {
        popularModels.value = models;
        isLoadingPatterns.value = false;
        error.value = '';
        print('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π: ${models.length}');
        for (var model in models) {
          print('üìã –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${model.name} —Å ${model.patterns.length} –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏');
        }
      },
      onError: (e) {
        error.value = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Ä–∞–∑–æ–≤: $e';
        isLoadingPatterns.value = false;
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π: $e');
      },
    );
  }

  // –ó–∞–≥—Ä—É–∑–∫–∞ —Ü–≤–µ—Ç–æ–≤—ã—Ö –ø–∞–ª–∏—Ç—Ä
  void loadColorsModels() {
    isLoadingColors.value = true;
    
    _colorsModelsSubscription = _colorsService.getColorsModelsStream().listen(
      (models) {
        colorsModels.value = models;
        isLoadingColors.value = false;
        print('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ü–≤–µ—Ç–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π: ${models.length}');
      },
      onError: (e) {
        print('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ü–≤–µ—Ç–æ–≤—ã—Ö –º–æ–¥–µ–ª–µ–π: $e');
        isLoadingColors.value = false;
      },
    );
  }

  // –í—ã–±–æ—Ä —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  void selectPopularModel(PopularModel? model) {
    selectedPopularModel.value = model;
    print('üé® –í—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${model?.name ?? "–Ω–µ—Ç"}');
  }

  // –í—ã–±–æ—Ä —Ü–≤–µ—Ç–æ–≤–æ–π –ø–∞–ª–∏—Ç—Ä—ã –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
  void selectColorsModel(ColorsModel? colorsModel) {
    selectedColorsModel.value = colorsModel;
    print('üé® –í—ã–±—Ä–∞–Ω–∞ –ø–∞–ª–∏—Ç—Ä–∞: ${colorsModel?.name ?? "–Ω–µ—Ç"}');
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
  Future<void> refreshData() async {
    try {
      print('üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π...');
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –º–æ–¥–µ–ª–∏
      isLoadingPatterns.value = true;
      final patterns = await _recomendationsService.getPopularModels();
      popularModels.value = patterns;
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–≤–µ—Ç–æ–≤—ã–µ –º–æ–¥–µ–ª–∏
      isLoadingColors.value = true;
      final colors = await _colorsService.getColorsModels();
      colorsModels.value = colors;
      
      error.value = '';
      print('‚úÖ –î–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      
    } catch (e) {
      error.value = '–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: $e';
      print('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: $e');
    } finally {
      isLoadingPatterns.value = false;
      isLoadingColors.value = false;
    }
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã
  String formatDate(DateTime date) {
    final months = [
      '—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è',
      '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'
    ];
    return '${date.day} ${months[date.month - 1]}';
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞ –ø–æ hex —Å—Ç—Ä–æ–∫–µ
  int getColorFromHex(String hexColor) {
    try {
      // –£–±–∏—Ä–∞–µ–º –≤—Å–µ —Å–∏–º–≤–æ–ª—ã # –∏–∑ —Å—Ç—Ä–æ–∫–∏
      String cleanColor = hexColor.replaceAll('#', '');
      
      // –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –º–µ–Ω—å—à–µ 6 —Å–∏–º–≤–æ–ª–æ–≤, –¥–æ–ø–æ–ª–Ω—è–µ–º –Ω—É–ª—è–º–∏
      if (cleanColor.length == 3) {
        cleanColor = cleanColor.split('').map((char) => char + char).join();
      }
      
      // –î–æ–±–∞–≤–ª—è–µ–º –∞–ª—å—Ñ–∞-–∫–∞–Ω–∞–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
      if (cleanColor.length == 6) {
        cleanColor = 'FF' + cleanColor;
      }
      
      // –ü–∞—Ä—Å–∏–º —Ü–≤–µ—Ç
      return int.parse(cleanColor, radix: 16);
    } catch (e) {
      print('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ü–≤–µ—Ç–∞ $hexColor: $e');
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–µ—Ä—ã–π —Ü–≤–µ—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
      return 0xFF808080; // –°–µ—Ä—ã–π —Ü–≤–µ—Ç
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–æ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø–µ—Ä–≤—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω)
  String getPopularModelImage(PopularModel model) {
    if (model.patterns.isNotEmpty) {
      return model.patterns.first.imageUrl;
    }
    return ''; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –µ—Å–ª–∏ –Ω–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—Ä–∞–∑–æ–≤
  Future<void> deletePatternCategory(PopularModel model) async {
    try {
      final confirmed = await _showDeleteConfirmationDialog(
        title: '–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞–∑–æ–≤?',
        content: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è "${model.name}" –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ.\n–í—Å–µ –æ–±—Ä–∞–∑—ã –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–∞–∫–∂–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.',
      );

      if (!confirmed) return;

      // –£–¥–∞–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ Firestore
      await FirebaseFirestore.instance
          .collection('recPatterns')
          .doc(model.id)
          .delete();

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
      Get.snackbar(
        '–£—Å–ø–µ—Ö',
        '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±—Ä–∞–∑–æ–≤ "${model.name}" —É–¥–∞–ª–µ–Ω–∞',
        backgroundColor: Palette.success,
        colorText: Palette.white100,
        duration: Duration(seconds: 3),
      );

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É
      backToMain();
      
      print('‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ–±—Ä–∞–∑–æ–≤ "${model.name}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
      
    } catch (e) {
      Get.snackbar(
        '–û—à–∏–±–∫–∞',
        '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é: $e',
        backgroundColor: Palette.error,
        colorText: Palette.white100,
        duration: Duration(seconds: 5),
      );
      
      print('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ–±—Ä–∞–∑–æ–≤: $e');
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤–æ–π –ø–∞–ª–∏—Ç—Ä—ã
  Future<void> deleteColorPalette(ColorsModel model) async {
    try {
      final confirmed = await _showDeleteConfirmationDialog(
        title: '–£–¥–∞–ª–∏—Ç—å —Ü–≤–µ—Ç–æ–≤—É—é –ø–∞–ª–∏—Ç—Ä—É?',
        content: '–ü–∞–ª–∏—Ç—Ä–∞ "${model.name}" –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–∞ –±–µ–∑–≤–æ–∑–≤—Ä–∞—Ç–Ω–æ.\n–í—Å–µ —Ü–≤–µ—Ç–∞ –∏ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ –±—É–¥—É—Ç –ø–æ—Ç–µ—Ä—è–Ω—ã.',
      );

      if (!confirmed) return;

      // –£–¥–∞–ª—è–µ–º –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ Firestore
      await FirebaseFirestore.instance
          .collection('recColors')
          .doc(model.id)
          .delete();

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏
      Get.snackbar(
        '–£—Å–ø–µ—Ö',
        '–¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ "${model.name}" —É–¥–∞–ª–µ–Ω–∞',
        backgroundColor: Palette.success,
        colorText: Palette.white100,
        duration: Duration(seconds: 3),
      );

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≥–ª–∞–≤–Ω–æ–º—É —ç–∫—Ä–∞–Ω—É
      backToMain();
      
      print('‚úÖ –¶–≤–µ—Ç–æ–≤–∞—è –ø–∞–ª–∏—Ç—Ä–∞ "${model.name}" —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
      
    } catch (e) {
      Get.snackbar(
        '–û—à–∏–±–∫–∞',
        '–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø–∞–ª–∏—Ç—Ä—É: $e',
        backgroundColor: Palette.error,
        colorText: Palette.white100,
        duration: Duration(seconds: 5),
      );
      
      print('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤–æ–π –ø–∞–ª–∏—Ç—Ä—ã: $e');
    }
  }

  // –î–∏–∞–ª–æ–≥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
  Future<bool> _showDeleteConfirmationDialog({
    required String title,
    required String content,
  }) async {
    final result = await Get.dialog<bool>(
      AlertDialog(
        backgroundColor: Palette.red500,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(16),
        ),
        title: Text(
          title,
          style: TextStyles.titleMedium.copyWith(color: Palette.white100),
        ),
        content: Text(
          content,
          style: TextStyles.bodyMedium.copyWith(color: Palette.grey350),
        ),
        actions: [
          TextButton(
            onPressed: () => Get.back(result: false),
            child: Text(
              '–û—Ç–º–µ–Ω–∞',
              style: TextStyles.bodyMedium.copyWith(color: Palette.grey350),
            ),
          ),
          ElevatedButton(
            onPressed: () => Get.back(result: true),
            style: ElevatedButton.styleFrom(
              backgroundColor: Palette.error,
              foregroundColor: Palette.white100,
            ),
            child: Text(
              '–£–¥–∞–ª–∏—Ç—å',
              style: TextStyles.bodyMedium.copyWith(color: Palette.white100),
            ),
          ),
        ],
      ),
      barrierDismissible: false,
    );

    return result ?? false;
  }
}
