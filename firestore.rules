rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Функция для проверки, является ли пользователь стилистом
    function isStylist() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/stylists/$(request.auth.uid));
    }

    // Доступ к коллекции стилистов
    match /stylists/{stylistId} {
      // Все пользователи могут читать информацию о стилистах
      allow read: if true;

      // Пользователь может создавать и обновлять только свой документ стилиста
      allow create, update: if request.auth != null && request.auth.uid == stylistId;

      // Только админы могут удалять (если нужно)
      allow delete: if request.auth != null; // Здесь можете добавить проверку на админа

      // Доступ к чатам стилиста (только для самого стилиста или админов)
      match /chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth != null;
      }

      // Доступ к запросам стилиста (только для самого стилиста или админов)
      match /requests/{requestId} {
        allow read, write: if request.auth != null;
      }

      // Добавляем правила для отзывов
      match /reviews/{reviewId} {
        // Пользователи могут читать все отзывы
        allow read: if true;
        // Авторизованные пользователи могут добавлять отзывы
        allow create: if request.auth != null;
        // Пользователи могут обновлять только свои отзывы
        allow update, delete: if request.auth != null && 
          request.auth.uid == resource.data.userId;
      }
    }

    // Доступ к документу пользователя (если нужен)
    match /users/{userId} {
      // Пользователи могут читать и писать свои данные
      // Стилисты могут читать и редактировать всех пользователей
      allow read, write: if request.auth != null && 
                            (request.auth.uid == userId || isStylist());
      
      match /notifications/{notificationId} {
        allow read, write: if request.auth != null && 
                             (request.auth.uid == userId || isStylist());
      }
      
      // Доступ к чатам пользователя
      match /chats/{chatId}/messages/{messageId} {
        allow read, write: if request.auth != null && 
                             (request.auth.uid == userId || isStylist());
      }
      
      // Доступ к запросам пользователя
      match /requests/{requestId} {
        allow read, write: if request.auth != null && 
                             (request.auth.uid == userId || isStylist());
      }
    }

    // ДОБАВЛЕНО: Глобальные правила для стилистов для управления чатами
    // Позволяет стилистам работать с collectionGroup запросами
    match /{path=**}/requests/{requestId} {
      allow read, write: if request.auth != null && isStylist();
    }
    
    match /{path=**}/messages/{messageId} {
      allow read, write: if request.auth != null && isStylist();
    }
    
    match /{path=**}/chats/{chatId} {
      allow read, write: if request.auth != null && isStylist();
    }

    // Доступ к wardrobe пользователя
    match /users/{userId}/wardrobe/{itemId} {
      allow read, write: if request.auth != null && 
                           (request.auth.uid == userId || isStylist());
    }

    // Доступ к cards пользователя
    match /users/{userId}/cards/{itemId} {
      allow read, write: if request.auth != null && 
                           (request.auth.uid == userId || isStylist());
    }

    // Доступ к custom_tags пользователя
    match /users/{userId}/custom_tags/{itemId} {
      allow read, write: if request.auth != null && 
                           (request.auth.uid == userId || isStylist());
    }

    // Доступ к patterns пользователя - ИСПРАВЛЕНО для стилистов
    match /users/{userId}/patterns/{itemId} {
      // Пользователи могут читать и писать свои образы
      // Стилисты могут создавать образы для любых пользователей
      allow read: if request.auth != null && 
                     (request.auth.uid == userId || isStylist());
      allow write: if request.auth != null && 
                      (request.auth.uid == userId || isStylist());
    }
    
    // НОВЫЕ ПРАВИЛА: Доступ к коллекции рекомендуемых образов
    match /recPatterns/{patternId} {
      // Все пользователи могут читать рекомендуемые образы
      allow read: if true;
      
      // Только авторизованные пользователи могут писать (для админов/стилистов)
      allow write: if request.auth != null;
    }
    
    // НОВЫЕ ПРАВИЛА: Доступ к коллекции рекомендуемых цветовых палитр
    match /recColors/{colorId} {
      // Все пользователи могут читать рекомендуемые цветовые палитры
      allow read: if true;
      
      // Только авторизованные пользователи могут писать (для админов/стилистов)
      allow write: if request.auth != null;
    }
    
    // УСТАРЕВШИЕ ПРАВИЛА (можно удалить после миграции)
    // Доступ к документу с рекомендациями patterns
    match /recomendations/patterns {
      // Все пользователи могут читать рекомендации
      allow read: if true;
      
      // Только авторизованные пользователи могут писать (для админов)
      allow write: if request.auth != null;
    }
    
    // Правила для документа colors (исправлено)
    match /recomendations/colors {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
} 